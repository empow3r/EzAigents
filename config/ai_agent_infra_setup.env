// ... existing content ...

---

## üåê `.env.tokenpool` Sample

```env
# Claude Keys
CLAUDE_KEY_1=sk-ant-...
CLAUDE_KEY_2=sk-ant-...

# GPT Keys
OPENAI_KEY_1=sk-openai-...
OPENAI_KEY_2=sk-openai-...

# DeepSeek via OpenRouter
OPENROUTER_KEY_1=sk-openrouter-...
OPENROUTER_KEY_2=sk-openrouter-...

# Gemini
GEMINI_KEY_1=sk-gemini-...
GEMINI_KEY_2=sk-gemini-...

# Assign pools per agent in orchestrator.js
```

## üõ†Ô∏è Deploy to Local or Cloud (R720 / Railway / Fly.io)

### Option A: Run Locally on R720
```bash
git clone your-repo-url
cd your-repo
cp .env.tokenpool.example .env
npm install
npm run build
docker-compose up --scale agent_claude=10 --scale agent_gpt=10 --scale agent_deepseek=10
```

### Option B: Deploy to Railway or Fly.io
- Railway: push to GitHub + run `railway up`
- Fly.io:
```bash
fly launch
fly secrets import < .env
fly scale count 30
```

---

## üéûÔ∏è Loom-Style Agent Replay Viewer (MVP)

Each completed task stores a `.log.json` with:
```json
{
  "agent": "claude-3-opus",
  "task": "refactor CTA",
  "tokens": 982,
  "cost": 0.0027,
  "file": "web/components/CTA.tsx",
  "prompt": "Improve modularity...",
  "output": "...new code...",
  "diff": "...git-style diff...",
  "timestamp": "2025-07-08T04:22:00Z"
}
```

- Timeline viewer inside dashboard: replay task progression
- Filter by file, agent, token burn, fail count, etc.
- Integrate `<AgentReplayViewer />` in `/dashboard/src/components/`

---

‚úÖ Your system is now prepped for:
- Local or global scale
- Multi-agent memory with runtime context awareness
- Secure, versioned AI coding collaboration
- Post-task forensic replay, audit, and training enhancement

You're ready to scale up to 100+ AI agents now. Just say the word to export full repo, `.env`, and deployment assets.
