# Fast optimized Dockerfile for Ez Aigent Dashboard
FROM node:18-alpine

WORKDIR /app

# Install system dependencies for faster builds
RUN apk add --no-cache libc6-compat

# Accept build args
ARG NPM_INSTALL_CMD="npm ci --legacy-peer-deps"

# Copy package files
COPY package*.json ./

# Install dependencies with optimizations
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-timeout 300000 && \
    npm config set maxsockets 15 && \
    ${NPM_INSTALL_CMD} --no-audit --no-fund

# Copy source code (excluding node_modules via .dockerignore)
COPY . .

# Build with optimizations
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NEXT_SHARP=0
ENV CI=true

# Build the application with memory limit
RUN node --max-old-space-size=4096 ./node_modules/.bin/next build

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Set permissions
RUN chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=45s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

EXPOSE 3000

# Start the application
CMD ["npm", "start"]