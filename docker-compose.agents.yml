version: '3.9'

# Ez Aigent Agent Pool - Dynamically Managed by Auto-Scaler
# This file defines agent templates that are spawned on demand

networks:
  ai_network:
    external: true
    name: ezaigent_ai_network

services:
  # Claude Agent Template - Architecture and Refactoring Specialist
  claude:
    build: ./agents/claude
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - API_KEY=${CLAUDE_API_KEY}
      - MODEL=claude-3-opus
      - ROLE=refactor-core
      - MAX_CONTEXT=200000
      - EFFICIENCY_TRACKING=true
      - AGENT_ID=${AGENT_ID:-claude-1}
    volumes:
      - ./src:/src
      - ./logs:/app/logs
      - efficiency_data:/app/efficiency
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 120s
      timeout: 20s
      retries: 2
      start_period: 60s
    profiles:
      - claude-agents

  # GPT Agent Template - Backend Logic Specialist
  gpt:
    build: ./agents/gpt
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - API_KEY=${OPENAI_API_KEY}
      - MODEL=gpt-4o
      - ROLE=backend-logic
      - MAX_CONTEXT=128000
      - EFFICIENCY_TRACKING=true
      - AGENT_ID=${AGENT_ID:-gpt-1}
    volumes:
      - ./src:/src
      - ./logs:/app/logs
      - efficiency_data:/app/efficiency
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 120s
      timeout: 20s
      retries: 2
      start_period: 60s
    profiles:
      - gpt-agents

  # DeepSeek Agent Template - Testing and Validation Specialist
  deepseek:
    build: ./agents/deepseek
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - API_KEY_POOL=${DEEPSEEK_API_KEYS}
      - MODEL=deepseek-coder
      - ROLE=test-utils
      - MAX_CONTEXT=32000
      - EFFICIENCY_TRACKING=true
      - AGENT_ID=${AGENT_ID:-deepseek-1}
    volumes:
      - ./src:/src
      - ./logs:/app/logs
      - efficiency_data:/app/efficiency
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 120s
      timeout: 20s
      retries: 2
      start_period: 60s
    profiles:
      - deepseek-agents

  # Mistral Agent Template - Documentation Specialist
  mistral:
    build: ./agents/mistral
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - API_KEY=${MISTRAL_API_KEY}
      - MODEL=command-r-plus
      - ROLE=docgen
      - MAX_CONTEXT=32000
      - EFFICIENCY_TRACKING=true
      - AGENT_ID=${AGENT_ID:-mistral-1}
    volumes:
      - ./src:/src
      - ./logs:/app/logs
      - efficiency_data:/app/efficiency
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 120s
      timeout: 20s
      retries: 2
      start_period: 60s
    profiles:
      - mistral-agents

  # Gemini Agent Template - Analysis and Mobile Specialist
  gemini:
    build: ./agents/gemini
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - API_KEY=${GEMINI_API_KEY}
      - MODEL=gemini-pro
      - ROLE=analysis
      - MAX_CONTEXT=32000
      - EFFICIENCY_TRACKING=true
      - AGENT_ID=${AGENT_ID:-gemini-1}
    volumes:
      - ./src:/src
      - ./logs:/app/logs
      - efficiency_data:/app/efficiency
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 120s
      timeout: 20s
      retries: 2
      start_period: 60s
    profiles:
      - gemini-agents

volumes:
  efficiency_data:
    external: true
    name: ezaigent_efficiency_data