
services:
  # Redis Message Queue with Auth
  redis:
    image: redis:7-alpine
    container_name: ezaigents-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - ezaigents-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Dashboard Web Server
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: ezaigents-dashboard
    ports:
      - "${DASHBOARD_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - shared-memory:/app/.agent-memory:ro
      - dashboard-cache:/app/.next/cache
    networks:
      - ezaigents-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Claude Agent with Enhanced Coordination
  claude-agent:
    build:
      context: .
      dockerfile: Dockerfile.enhanced-agent
      args:
        AGENT_TYPE: claude
    container_name: ezaigents-claude
    environment:
      - AGENT_ID=claude-docker-001
      - AGENT_TYPE=claude
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - MODEL=claude-3-opus
      - MEMORY_LIMIT=200
      - NODE_ENV=production
      - COORDINATION_ENABLED=true
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - shared-memory:/app/.agent-memory
      - shared-state:/app/shared/state
      - agent-logs:/app/logs
      - ./src:/app/src
    networks:
      - ezaigents-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # WebScraper Agent with Enhanced Coordination
  webscraper-agent:
    build:
      context: .
      dockerfile: Dockerfile.enhanced-agent
      args:
        AGENT_TYPE: webscraper
    container_name: ezaigents-webscraper
    environment:
      - AGENT_ID=webscraper-docker-001
      - AGENT_TYPE=webscraper
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - SCRAPER_HEADLESS=true
      - MEMORY_LIMIT=300
      - NODE_ENV=production
      - COORDINATION_ENABLED=true
      - PUPPETEER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-gpu
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - shared-memory:/app/.agent-memory
      - shared-state:/app/shared/state
      - agent-logs:/app/logs
      - ./src:/app/src
      - webscraper-cache:/tmp/puppeteer-cache
    networks:
      - ezaigents-network
    restart: unless-stopped
    # SECURITY: Removed privileged capabilities - use least privilege principle
    # cap_add:
    #   - SYS_ADMIN
    # security_opt:
    #   - seccomp:unconfined
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Health Monitor with Docker Socket Access
  health-monitor:
    build:
      context: .
      dockerfile: Dockerfile.health-monitor
    container_name: ezaigents-health-monitor
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - AGENT_HEALTH_CHECK_INTERVAL=${AGENT_HEALTH_CHECK_INTERVAL:-30}
      - AGENT_ALERT_THRESHOLD=${AGENT_ALERT_THRESHOLD:-120}
      - AGENT_AUTO_RESTART=${AGENT_AUTO_RESTART:-true}
      - DOCKER_HOST=unix:///var/run/docker.sock
    depends_on:
      redis:
        condition: service_healthy
    # SECURITY: Docker socket access removed - use healthcheck endpoints instead
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes:
      - shared-memory:/app/.agent-memory:ro
      - agent-logs:/app/logs
    networks:
      - ezaigents-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  ezaigents-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: ezaigents-bridge

volumes:
  redis-data:
    driver: local
  shared-memory:
    driver: local
  shared-state:
    driver: local
  agent-logs:
    driver: local
  dashboard-cache:
    driver: local
  webscraper-cache:
    driver: local