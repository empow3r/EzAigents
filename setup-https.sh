#!/bin/bash

# Complete HTTPS Setup Script for Ez Aigent
# This script sets up SSL certificates, nginx proxy, and Docker configuration

set -e

# Configuration
DOMAIN="${1:-localhost}"
COMPOSE_FILE="dockge-ez-aigent.yml"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Ez Aigent HTTPS Setup${NC}"
echo "========================"
echo "Domain: $DOMAIN"
echo "Compose File: $COMPOSE_FILE"
echo ""

# Check dependencies
echo -e "${YELLOW}üîç Checking dependencies...${NC}"
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker is not installed${NC}"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose is not installed${NC}"
    exit 1
fi

if ! command -v openssl &> /dev/null; then
    echo -e "${RED}‚ùå OpenSSL is not installed${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ All dependencies found${NC}"

# Create necessary directories
echo -e "${YELLOW}üìÅ Creating directories...${NC}"
mkdir -p ssl nginx logs shared

# Generate SSL certificates
echo -e "${YELLOW}üîë Generating SSL certificates...${NC}"
export SSL_CERT_DOMAIN="$DOMAIN"
./scripts/generate-ssl-cert.sh ./ssl

# Update environment variables
echo -e "${YELLOW}‚öôÔ∏è  Updating environment variables...${NC}"
if [ ! -f .env ]; then
    echo -e "${BLUE}üìù Creating .env file...${NC}"
    cp .env.example .env 2>/dev/null || touch .env
fi

# Update .env with SSL configuration
cat >> .env << EOF

# SSL Configuration (Generated by setup-https.sh)
SSL_CERT_DOMAIN=$DOMAIN
ENABLE_HTTPS=true
HTTPS_PORT=443
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
EOF

# Create Docker volumes
echo -e "${YELLOW}üì¶ Creating Docker volumes...${NC}"
docker volume create ssl_certs 2>/dev/null || true
docker volume create logs 2>/dev/null || true
docker volume create shared_data 2>/dev/null || true

# Copy SSL certificates to Docker volume
echo -e "${YELLOW}üìã Copying SSL certificates to Docker volume...${NC}"
docker run --rm -v ssl_certs:/data -v $(pwd)/ssl:/ssl alpine:latest sh -c "
    cp /ssl/cert.pem /data/cert.pem
    cp /ssl/key.pem /data/key.pem
    chmod 644 /data/cert.pem
    chmod 600 /data/key.pem
"

# Stop any existing containers
echo -e "${YELLOW}üõë Stopping existing containers...${NC}"
docker-compose -f $COMPOSE_FILE down 2>/dev/null || true

# Start the services
echo -e "${YELLOW}üöÄ Starting Ez Aigent with HTTPS...${NC}"
docker-compose -f $COMPOSE_FILE up -d

# Wait for services to be ready
echo -e "${YELLOW}‚è≥ Waiting for services to be ready...${NC}"
sleep 10

# Check if services are running
echo -e "${YELLOW}üîç Checking service health...${NC}"
if docker-compose -f $COMPOSE_FILE ps | grep -q "Up"; then
    echo -e "${GREEN}‚úÖ Services are running${NC}"
else
    echo -e "${RED}‚ùå Some services failed to start${NC}"
    docker-compose -f $COMPOSE_FILE logs
    exit 1
fi

# Display final information
echo ""
echo -e "${GREEN}üéâ Ez Aigent HTTPS Setup Complete!${NC}"
echo "=================================="
echo ""
echo -e "${GREEN}üåê Your Ez Aigent dashboard is now available at:${NC}"
echo "  ‚Ä¢ HTTPS: https://$DOMAIN"
echo "  ‚Ä¢ HTTP:  http://$DOMAIN (redirects to HTTPS)"
echo ""
echo -e "${YELLOW}üìã Service Information:${NC}"
echo "  ‚Ä¢ Nginx Proxy: Handles SSL termination"
echo "  ‚Ä¢ Dashboard: Internal port 3000"
echo "  ‚Ä¢ Redis: Internal port 6379"
echo ""
echo -e "${YELLOW}üîê SSL Certificate Information:${NC}"
echo "  ‚Ä¢ Type: Self-signed certificate"
echo "  ‚Ä¢ Domain: $DOMAIN"
echo "  ‚Ä¢ Valid for: 365 days"
echo "  ‚Ä¢ Location: ./ssl/"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  Important Notes:${NC}"
echo "  ‚Ä¢ Browsers will show a security warning for self-signed certificates"
echo "  ‚Ä¢ For production, replace with CA-signed certificates"
echo "  ‚Ä¢ Certificate files are in ./ssl/ directory"
echo "  ‚Ä¢ Docker volumes: ssl_certs, logs, shared_data"
echo ""
echo -e "${BLUE}üõ†Ô∏è  Management Commands:${NC}"
echo "  ‚Ä¢ View logs: docker-compose -f $COMPOSE_FILE logs -f"
echo "  ‚Ä¢ Restart: docker-compose -f $COMPOSE_FILE restart"
echo "  ‚Ä¢ Stop: docker-compose -f $COMPOSE_FILE down"
echo "  ‚Ä¢ View certificate: openssl x509 -in ./ssl/cert.pem -text -noout"
echo ""
echo -e "${GREEN}‚ú® Setup complete! Your Ez Aigent system is now running with HTTPS.${NC}"